// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::chassisLeftMotor = NULL;
SpeedController* RobotMap::chassisRightMotor = NULL;
RobotDrive* RobotMap::chassisRobotDrive21 = NULL;
Gyro* RobotMap::chassisAlignmentGyro = NULL;
SpeedController* RobotMap::discThrowerMotor = NULL;
SpeedController* RobotMap::climberMotor = NULL;
DoubleSolenoid* RobotMap::climberAirAssist = NULL;
DigitalInput* RobotMap::climberForwardLimit = NULL;
DigitalInput* RobotMap::climberReverseLimit = NULL;
SpeedController* RobotMap::tiltTableMotor = NULL;
DigitalInput* RobotMap::tiltTableFullTiltLimit = NULL;
DigitalInput* RobotMap::tiltTableNoTiltLimit = NULL;
SpeedController* RobotMap::discKickermotor = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
ADXL345_I2C* RobotMap::tiltTableTiltCalculator = NULL;
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	chassisLeftMotor = new Jaguar(1, 1);
	lw->AddActuator("Chassis", "LeftMotor", (Jaguar*) chassisLeftMotor);
	
	chassisRightMotor = new Jaguar(1, 2);
	lw->AddActuator("Chassis", "RightMotor", (Jaguar*) chassisRightMotor);
	
	chassisRobotDrive21 = new RobotDrive(chassisLeftMotor, chassisRightMotor);
	
	chassisRobotDrive21->SetSafetyEnabled(false);
        chassisRobotDrive21->SetExpiration(0.5);
        chassisRobotDrive21->SetSensitivity(0.5);
        chassisRobotDrive21->SetMaxOutput(1.0);
        
	chassisAlignmentGyro = new Gyro(1, 1);
	lw->AddSensor("Chassis", "AlignmentGyro", chassisAlignmentGyro);
	chassisAlignmentGyro->SetSensitivity(1.25);
	discThrowerMotor = new Jaguar(1, 3);
	lw->AddActuator("DiscThrower", "Motor", (Jaguar*) discThrowerMotor);
	
	climberMotor = new Jaguar(1, 5);
	lw->AddActuator("Climber", "Motor", (Jaguar*) climberMotor);
	
	climberAirAssist = new DoubleSolenoid(1, 1, 2);      
	
	
	climberForwardLimit = new DigitalInput(1, 1);
	lw->AddSensor("Climber", "ForwardLimit", climberForwardLimit);
	
	climberReverseLimit = new DigitalInput(1, 2);
	lw->AddSensor("Climber", "ReverseLimit", climberReverseLimit);
	
	tiltTableMotor = new Jaguar(1, 6);
	lw->AddActuator("TiltTable", "Motor", (Jaguar*) tiltTableMotor);
	
	tiltTableFullTiltLimit = new DigitalInput(1, 3);
	lw->AddSensor("TiltTable", "FullTiltLimit", tiltTableFullTiltLimit);
	
	tiltTableNoTiltLimit = new DigitalInput(1, 4);
	lw->AddSensor("TiltTable", "NoTiltLimit", tiltTableNoTiltLimit);
	
	discKickermotor = new Jaguar(1, 4);
	lw->AddActuator("DiscKicker", "motor", (Jaguar*) discKickermotor);
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	tiltTableTiltCalculator = new ADXL345_I2C(1);
	//lw->AddSensor("TiltTable", "TiltCalculator", tiltTableTiltCalculator);
	chassisAlignmentGyro->SetSensitivity(0.007);
}
